diff --git a/dist/webSocketWithReconnection.js b/dist/webSocketWithReconnection.js
index 587b18776c9be6a9db4892c87500f22f3a9a2dc3..94608397a9126be24be3b2da7899fd8f39e60898 100644
--- a/dist/webSocketWithReconnection.js
+++ b/dist/webSocketWithReconnection.js
@@ -1,35 +1,38 @@
 import { createWebSocketPeer } from "cojson-transport-ws";
 import { WebSocket } from "ws";
 export function webSocketWithReconnection(peer, addPeer) {
-    let done = false;
-    const wsPeer = createWebSocketPeer({
-        websocket: new WebSocket(peer),
+  let done = false;
+  console.log("before createWebSocketPeer");
+  const wsPeer = createWebSocketPeer({
+    websocket: new WebSocket(peer),
+    id: "upstream",
+    role: "server",
+    onClose: handleClose,
+  });
+  console.log("after createWebSocketPeer");
+  let timer;
+  function handleClose() {
+    console.log("before handleClose");
+    if (done) return;
+    clearTimeout(timer);
+    timer = setTimeout(() => {
+      console.log(new Date(), "Reconnecting to upstream " + peer);
+      const wsPeer = createWebSocketPeer({
         id: "upstream",
+        websocket: new WebSocket(peer),
         role: "server",
         onClose: handleClose,
-    });
-    let timer;
-    function handleClose() {
-        if (done)
-            return;
-        clearTimeout(timer);
-        timer = setTimeout(() => {
-            console.log(new Date(), "Reconnecting to upstream " + peer);
-            const wsPeer = createWebSocketPeer({
-                id: "upstream",
-                websocket: new WebSocket(peer),
-                role: "server",
-                onClose: handleClose,
-            });
-            addPeer(wsPeer);
-        }, 1000);
-    }
-    return {
-        peer: wsPeer,
-        done: () => {
-            done = true;
-            clearTimeout(timer);
-        },
-    };
+      });
+      addPeer(wsPeer);
+      console.log("after addPeer");
+    }, 1000);
+  }
+  return {
+    peer: wsPeer,
+    done: () => {
+      done = true;
+      clearTimeout(timer);
+    },
+  };
 }
 //# sourceMappingURL=webSocketWithReconnection.js.map
